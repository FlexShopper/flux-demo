# Generated with:
# kubectl gs template nodepool --provider azure --cluster-name demo0 --description demo0 --organization flux-demo
# Changes:
# - Helm hooks for Cluster CR
apiVersion: exp.infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachinePool
metadata:
  creationTimestamp: null
  labels:
    helm.sh/hook: post-install
    cluster.x-k8s.io/cluster-name: {{ .Values.clusterid }}
    giantswarm.io/cluster: {{ .Values.clusterid }}
    giantswarm.io/machine-pool: kd74z
    giantswarm.io/organization: {{ .Values.organization }}
  name: kd74z
  namespace: {{ .Values.namespace }}
spec:
  location: ""
  template:
    osDisk:
      diskSizeGB: 0
      managedDisk:
        storageAccountType: ""
      osType: ""
    sshPublicKey: ""
    vmSize: Standard_D4s_v3
status:
  ready: false
  replicas: 0
  version: ""
---
apiVersion: exp.cluster.x-k8s.io/v1alpha3
kind: MachinePool
metadata:
  annotations:
    cluster.k8s.io/cluster-api-autoscaler-node-group-max-size: "10"
    cluster.k8s.io/cluster-api-autoscaler-node-group-min-size: "3"
    machine-pool.giantswarm.io/name: {{ .Values.clusterid }}
  creationTimestamp: null
  labels:
    helm.sh/hook: post-install
    cluster.x-k8s.io/cluster-name: {{ .Values.clusterid }}
    giantswarm.io/cluster: {{ .Values.clusterid }}
    giantswarm.io/machine-pool: kd74z
    giantswarm.io/organization: {{ .Values.organization }}
  name: kd74z
  namespace: {{ .Values.namespace }}
spec:
  clusterName: {{ .Values.clusterid }}
  replicas: 3
  template:
    metadata: {}
    spec:
      bootstrap:
        configRef:
          apiVersion: core.giantswarm.io/v1alpha1
          kind: Spark
          name: kd74z
          namespace: {{ .Values.namespace }}
      clusterName: {{ .Values.clusterid }}
      infrastructureRef:
        apiVersion: exp.infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AzureMachinePool
        name: kd74z
        namespace: {{ .Values.namespace }}
status:
  bootstrapReady: false
  infrastructureReady: false
  replicas: 0
---
apiVersion: core.giantswarm.io/v1alpha1
kind: Spark
metadata:
  creationTimestamp: null
  labels:
    helm.sh/hook: post-install
    cluster.x-k8s.io/cluster-name: {{ .Values.clusterid }}
    giantswarm.io/cluster: {{ .Values.clusterid }}
  name: kd74z
  namespace: {{ .Values.namespace }}
spec: {}
status:
  dataSecretName: ""
  failureMessage: ""
  failureReason: ""
  ready: false
  verification:
    algorithm: ""
    hash: ""
